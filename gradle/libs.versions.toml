[versions]
exposed-version = "0.61.0"
h2-version = "2.3.232"
postgresql-version = "42.7.3"
kotlin-version = "2.1.10"
ktor-version = "3.1.3"
logback-version = "1.4.14"
prometheus-version = "1.6.13"
kotest-version = "5.7.2"
kotest-assertions-ktor-version = "2.0.0"
kotlin-logging-version = "7.0.3"
logstash-logback-encoder-version = "8.1"
ktlint-version = "12.3.0"
detekt-version = "1.23.8"
hoplite-version = "2.9.0"
testcontainers-version = "1.21.1"
flyway-version = "11.9.1"
sqldelight-version = "2.1.0"
hikari-version = "6.3.0"
kotlin-kafka-version = "0.4.1"
result4k-version = "2.22.3.0"

[libraries]
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor-version" }
ktor-server-metrics-micrometer = { module = "io.ktor:ktor-server-metrics-micrometer", version.ref = "ktor-version" }
micrometer-registry-prometheus = { module = "io.micrometer:micrometer-registry-prometheus", version.ref = "prometheus-version" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor-version" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor-version" }
ktor-server-call-logging = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktor-version" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor-version" }
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed-version" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed-version" }
h2 = { module = "com.h2database:h2", version.ref = "h2-version" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql-version" }
ktor-server-call-id = { module = "io.ktor:ktor-server-call-id", version.ref = "ktor-version" }
ktor-server-host-common = { module = "io.ktor:ktor-server-host-common", version.ref = "ktor-version" }
ktor-server-status-pages = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktor-version" }
ktor-server-request-validation = { module = "io.ktor:ktor-server-request-validation", version.ref = "ktor-version" }
ktor-server-auth-jwt = { module = "io.ktor:ktor-server-auth-jwt", version.ref = "ktor-version" }
ktor-server-default-headers = { module = "io.ktor:ktor-server-default-headers", version.ref = "ktor-version" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor-version" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback-version" }
ktor-server-test-host = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor-version" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin-version" }
kotest-runner-junit = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest-version" }
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest-version" }
kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest-version" }
kotest-assertions-ktor = { module = "io.kotest.extensions:kotest-assertions-ktor", version.ref = "kotest-assertions-ktor-version" }
kotlin-logging = { module = "io.github.oshai:kotlin-logging-jvm", version.ref = "kotlin-logging-version" }
logstash-logback-encoder = { module = "net.logstash.logback:logstash-logback-encoder", version.ref = "logstash-logback-encoder-version" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor-version" }
hoplite-core = { module = "com.sksamuel.hoplite:hoplite-core", version.ref = "hoplite-version" }
testcontainers-core = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers-version" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql", version.ref = "testcontainers-version" }
testcontainers-kafka = { module = "org.testcontainers:kafka", version.ref = "testcontainers-version" }
flyway-core = { module = "org.flywaydb:flyway-core", version.ref = "flyway-version" }
flyway-postgres = { module = "org.flywaydb:flyway-database-postgresql", version.ref = "flyway-version" }
sqldelight-jdbc = { module = "app.cash.sqldelight:jdbc-driver", version.ref = "sqldelight-version" }
sqldelight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight-version" }
hikari = { module = "com.zaxxer:HikariCP", version.ref = "hikari-version" }
kotlin-kafka = { module = "io.github.nomisrev:kotlin-kafka", version.ref = "kotlin-kafka-version" }
result4k = { module = "dev.forkhandles:result4k", version.ref = "result4k-version" }
result4k-kotest = { module = "dev.forkhandles:result4k-kotest", version.ref = "result4k-version" }

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin-version" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor-version" }
kotlin-plugin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin-version" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint-version" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt-version"}
flyway = { id = "org.flywaydb.flyway", version.ref = "flyway-version" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight-version" }
